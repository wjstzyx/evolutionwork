#include "Formulas/Custom/Helper/BacktestHelper.afl";
#include "Formulas/Custom/Helper/TradeHelper.afl";
#include "Formulas/Custom/BasicV3/dfb.afl";
#include "Formulas/Custom/BasicV3/exiv.afl";
#include "Formulas/Custom/BasicV3/exv.afl";
#include "Formulas/Custom/BasicV3/hl.afl";
#include "Formulas/Custom/BasicV3/maa.afl";
#include "Formulas/Custom/BasicV3/sxv.afl";
#include "Formulas/Custom/BasicV3/tb.afl";
#include "Formulas/Custom/BasicV3/tm.afl";
#include "Formulas/Custom/BasicV3/v7.afl";

OptimizerSetEngine("spso");
OptimizerSetOption("Runs", 1 );
OptimizerSetOption("MaxEval",600);

StrategyName = "if1vt20i20m20v25h15_6301105-40173";
StrategyID = 40173;
ProType = 0;

EXIV0=EXIV(22,31,0,"IF");
EXIV1=EXIV(48,49,1,"IF");
EXIV2=EXIVMA(63,29,88,1,"IF");
EXIV3=EXIVMA(45,46,76,1,"IF");
EXIV4=EXIV(18,33,0,"IF");
EXIV5=EXIV(6,21,0,"IF");
EXIV6=EXIV(21,62,1,"IF");
EXIV7=EXIV(21,62,1,"IF");


cond_exiv=(EXIV0+EXIV1+EXIV2+EXIV3+EXIV4+EXIV5+EXIV6+EXIV7)/8;


MAA0=MAArrangeRoll(25,8,1,1000,1000,"IF");
MAA1=MAArrangeRoll(16,7,1,1000,1000,"IF");
MAA2=MAArrangeRoll(25,12,1,1000,1000,"IF");
MAA3=MAArrangeRoll(24,11,1,1000,1000,"IF");
MAA4=MAArrangeRoll(31,12,1,1000,1000,"IF");
MAA5=MAArrangeRoll(23,10,0,1000,1000,"IF");
MAA6=MAArrangeRoll(20,10,0,1000,1000,"IF");
MAA7=MAArrangeRoll(16,9,1,1000,1000,"IF");

cond_maa=(MAA0 +MAA1 +MAA2 +MAA3+MAA4+MAA5+MAA6+MAA7 )/8;

V70=V7DYStartVer(20,107,"IF");
V71=V7DYLONGK(34,30,2,4,"IF");
V72=V7DYStartVer(1,116,"IF");
V73=V7DYStartVer(82,37,"IF");

cond_v7=(V70+V71+V72+V73)/4;


HL0=HLCAVG(6,21,46,"IF");
HL1=HLPAVG(150,63,15,"IF");
HL2=HLAVGA(22,8,57,"IF");
HL3=HLCAVG(18,6,19,"IF");
HL4=HLCAVG(31,5,34,"IF");
HL5=HLCAVG(18,5,25,"IF");
HL6=HLNAVG2(37,4,54,"IF");
HL7=HLNAVG2(40,5,53,"IF");


cond_HL=(HL0+HL1+HL2+HL3+HL4+HL5+HL6+HL7)/8;

w_exiv = ParamOptimize("w_exiv",2,0,3,0.5);
w_maa = ParamOptimize("w_maa",2,0,3,0.5);
w_v7 = ParamOptimize("w_v7",2.5,0,3,0.5);
w_HL = ParamOptimize("w_hl",1.5,0,3,0.5);


Cond = w_exiv*cond_exiv + w_maa*cond_maa + w_v7*cond_v7 + w_hl*Cond_hl;

Vote=2;

BSIG=Cond>Vote;
SSIG=Cond<-Vote;
CSIG=GetLastK("IF");
Buy=BSIG;
Short=SSIG;
Sell=Cover=CSIG;
sinPs=getPS(BSIG,SSIG,CSIG);
sinBS=getSIG(BSIG,SSIG,CSIG,sinPs);
Trading_log(BSIG,SSIG,CSIG,StrategyID,StrategyName,ProType);
PlotPerformance(sinPs,sinBS,StrategyName);