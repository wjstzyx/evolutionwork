#include "Formulas/Custom/helper/BacktestHelper.afl";
#include "Formulas/Custom/Helper/TradeHelper.afl";
OptimizerSetEngine("spso");
OptimizerSetOption("Runs", 1 );
OptimizerSetOption("MaxEval", 1000);
TickerNAME = Name();             

StrategyName = "45min-LON-45MIN-TF";
StrategyID = 380012;
ProType = 0;
Plot(0,StrategyName,colorBlack,styleNoLine); 

TB=IIf(H>Ref(C,-1),H-Ref(C,-1)+C-L,C-L);

TS=IIf(Ref(C,-1)>L,Ref(C,-1)-L+H-C,H-C);

VOL1=IIf(TB+TS==0,0,(TB-TS)*V/(TB+TS)/10000);

VOL10=AMA(VOL1,0.1);
VOL11=AMA(VOL1,0.05);

RES1=VOL10-VOL11;

N=Param("N",3,0,100,1);
M=Param("M",1,1,100,1);

LON=Sum(RES1,N);

MA1=MA(LON,M);

//Plot(RES1,"RES1",colorYellow);

//Plot(LON,"LON",colorBlue);
//Plot(MA1,"MA1",colorRed);

///////////////////////////////////////////////////
G3=LON;

ZigChange=Param("Zig",40,40,100,10);
G4=Zig(G3*1000,ZigChange);

Buy=(G4>Ref(G4,-1)) ;
Sell=(G4<(Ref(G4,-1)));
//PlotPerformance(Buy,Sell,0);

/////////////////////////////////////////////////

/////////////////////functions/////////////////////////////////////////

function Softmax(p,Lambda,Length)
{
// p-price or data series
//Lambda--linearity parameter//6
//Length--lookback length//100

pi=3.14159;
e=2.71828;

m=MA(p,Length);
s=StDev(p,Length);

a=(p-m)/((Lambda*s)/(2*pi));
y=1/(1+e^(-a));
return 100*y;
}

function zscore(p,Length)
{

// Transforms input data p
// to z-score with mean 0 and 
// standard deviation 1.

zs=(p-MA(p,Length))/StDev(p,Length);

return zs;
}

function rescale(p,inputmin,inputmax,Outputmin,Outputmax)
{
Outputrange=Outputmax-Outputmin;
inputrange=inputmax-inputmin;
x=(p-inputmin)*(Outputrange/inputrange);
return x;
}

function PIR(p,Length)
{
Ll=LLV(p,Length);
Hh=HHV(p,Length);
return (100*(p-Ll)/(Hh-Ll));
}

function Fisher(array)
// Figure 1.7 on p. 7
{
  F = array;
  F = .25 * log((1+ array)/(1 - array)) + .5 * Ref(F, -1);
  return F;
}

function Normalize(array, arraylen)
// Figure 1.7 on p. 7
{
  MaxH = HHV(array, arraylen);
  MinL = LLV(array, arraylen);
  Value1[0] = array[0];  // Initialize as array

  for(i = 1; i < BarCount; i++)
  {
     Value1[i] = .5 * 2 * ((array[i] - MinL[i]) / (MaxH[i] - MinL[i]) - .5) + .5 * Value1[i-1];
     if (Value1[i] > .9999) Value1[i] = .9999;
     if (Value1[i] < -.9999) Value1[i] = -.9999;
  }
  return Value1;
}

function InverseFisher(array)
{
  e2y = exp(2 * array);
  return (e2y - 1)/(e2y + 1);
}

//////////////////////////indicators////////////////////////////////////////////
Length=Param("Length",80,10,1000,10);
Lambda=Param("Lambda",1,1,100,1);


FisherG3=Fisher(G3);
InverseFisherG3=InverseFisher(FisherG3);
zscoreG3=zscore(G3,Length);
PIRG3=PIR(G3,Length);
SoftmaxG3=Softmax(G3,Lambda,Length);




//Plot(FisherG3,"FisherG3",colorYellow);
//Plot(InverseFisherG3,"InverseFisherG3",colorRed);
//Plot(zscoreG3,"zscoreG3",colorGreen,styleLeftAxisScale);
//Plot(PIRG3,"PIRG3",colorGreen,styleLeftAxisScale);

Selltrigger=Param("Selltrigger",12,0,100,1);

ssig=PIRG3<Selltrigger;

bsig=PIRG3>100-Selltrigger;
//////////////////////////zhisun/////////////////////////////////////////////////

stdzhisun=ParamOptimize("stdzhisun",1.8,0,10,0.1);
zhisunup=BBandTop(C,100,stdzhisun);
zhisundown=BBandBot(C,100,stdzhisun);

ps=GetPs(bsig,ssig,0);
C001=ps==1 AND C<zhisundown;
C002=ps==-1 AND C>zhisunup;

Lstbsg = BarsSince(ps==1 AND Ref(ps,-1)!=1);
Lstssg = BarsSince(ps==-1 AND Ref(ps,-1)!=-1);

tp = Param("tp",6,0,100,1);


C05 = ps==1 AND  C<HHV(C,lstbsg)-tp*C/1000;
C06 = ps==-1 AND  C>LLV(C,lstssg)+tp*C/1000;

p = Param("p",0.8,0,100,0.1);
C03 = ps==1 AND  C<Ref(C,-Lstbsg)-p;
C04 = ps==-1 AND  C>Ref(C,-lstssg)+p;

//Csig=C001 OR C002 OR C05 OR C06;
//Csig=C001 OR C002;
Csig=C001 OR C002 OR C05 OR C06 OR C03 OR C04;

//Csig=C001 OR C002 OR C03 OR C04;

//Plotperformance(bsig,ssig,Csig);

//Csig=C05 OR C06;
//Csig=0;

//Csig=C001 OR C002;
    Buy = bsig ;           
    Sell= CSIG;        
    Short = ssig ;         
    Cover = CSIG;          

PlotPerformance(BSig,Ssig,Csig);
Trading_log(BSIG,SSIG,CSIG,StrategyID,StrategyName,ProType);

ps0 = GetPs(bsig,ssig,csig);
Filter= 1;
AddColumn(ps0,"ps");