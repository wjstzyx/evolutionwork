_SECTION_BEGIN("CU_01_V7_HL_TM_MAA_V20_G2");
#include "Formulas/Custom/Helper/BacktestHelper.afl";
#include "Formulas/Custom/Helper/TradeHelper.afl";
#include "Formulas/Custom/BasicV3/exiv.afl";
#include "Formulas/Custom/BasicV3/exv.afl";
#include "Formulas/Custom/BasicV3/hl.afl";
#include "Formulas/Custom/BasicV3/MAA.afl";
#include "Formulas/Custom/BasicV3/V7.afl";
#include "Formulas/Custom/BasicV3/TM.afl";
#include "Formulas/Custom/BasicV3/DFB.afl";

OptimizerSetEngine("spso");
OptimizerSetOption("Runs", 1 );
OptimizerSetOption("MaxEval", 1000);

StrategyName = "CU_01_V7_HL_TM_MAA_V20_G2.1";
StrategyID = 50006;
ProType = 1;


V71=V7min(28,99,35,"CU");
V72=V7min(27,98,10,"CU");
V73=V7min(27,99,12,"CU");
v74=V7min(46,100,0,"CU");
V75=V7min(32,99,2,"CU");

HL1=HLNAVG(107,104,0,"CU");
HL2=HLNAVG(93,100,0,"CU");
HL3=HLNAVG2(126,104,0,"CU");
HL4=HLAVG(91,128,54,"CU");
HL5=HLNAVG2(133,103,0,"CU");
HL6=HLNAVG(94,100,46,"CU");
HL7=HLAVG(84,131,57,"CU");
HL8=HLNAVG2(93,111,0,"CU");

TM1=TimeShareHLHalfLess(26,33,47,154,450,"CU");
TM2=TimeShareFHLLess(14,20,22,1000,330,"CU");
TM3=TimeShareHLHalfLess(26,34,45,154,450,"CU");
TM4=TimeShareHLLess(52,51,5,1000,400,"CU");
TM5=TimeShareHLLess(37,60,13,1000,400,"CU");
TM6=TimeShareHLHalfLess(25,32,45,154,450,"CU");
TM7=TimeShareHLLess(39,61,7,1000,400,"CU");
TM8=TimeShareHLHalfLess(30,33,45,154,450,"CU");

MAA1=MAArrangeRoll(49,11,0,1000,1000,"CU");
MAA2=MAArrangeRoll(47,9,0,1000,1000,"CU");
MAA3=MAArrangeRoll(53,13,0,1000,1000,"CU");
MAA4=MAArrangeRoll(33,11,0,1000,1000,"CU");
MAA5=MAArrangeRoll(51,11,0,1000,1000,"CU");
MAA6=MAArrangeRoll(41,15,1,1000,1000,"CU");









cond_V7=(V71+V72+V73+V74+V75)/5;
cond_HL=(HL1+HL2+HL3+HL4+HL5+HL6+HL7+HL8)/8;
cond_TM=(TM1+TM2+TM3+TM4+TM5+TM6+TM7+TM8)/8;
cond_MAA=(MAA1+MAA2+MAA3+MAA4+MAA5+MAA6)/6;



w_V7 = ParamOptimize("w_V7",4,0,4,0.5);
w_HL= ParamOptimize("w_HL",1.5,0,4,0.5);
w_TM= ParamOptimize("w_TM",2.5,0,4,0.5);
w_MAA= ParamOptimize("w_MAA",2,0,4,0.5);

Cond = w_V7 *cond_V7 + w_HL*cond_HL + w_TM*cond_TM + w_MAA*cond_MAA;




Vote=2.0;

BSIG=Cond>Vote;
SSIG=Cond<-Vote;
CSIG=GetLastK("CU");
Buy=BSIG;
Short=SSIG;
Sell=Cover=CSIG;
sinPs=getPS(BSIG,SSIG,CSIG);
sinBS=getSIG(BSIG,SSIG,CSIG,sinPs);
Trading_log(BSIG,SSIG,CSIG,StrategyID,StrategyName,ProType);
PlotPerformance(sinPs,sinBS,StrategyName);
_SECTION_END();